### make
### make TGT64=64
CC          = cc
CCFLAGS32   = -g -qldbl128 -qalign=natural
CCFLAGS64   = $(CCFLAGS32) -q64
AR          = ar
AROPT       = -X32_64
INCLUDEPATH = -I. -I/usr/include

###  shared lib
LIBOBJS      = PaseCliAsync_gen.o PaseCliInit.o PaseCliCustom.o
LIBEXPS      = -bE:libdb400.exp
SHRLIB32     = libdb400.a
SHROBJ32     = shr.o
LIBDEPS32    = -lpthreads -liconv -ldl -lpthread -bM:SRE -bnoentry
SHRLIB64     = libdb400_64.a
SHROBJ64     = shr_64.o
LIBDEPS64    = $(LIBDEPS32) -q64

### make TGT64=64
ifdef TGT64
CCFLAGS      = $(CCFLAGS64)
SHRLIB       = $(SHRLIB32)
SHROBJ       = $(SHROBJ64)
LIBDEPS      = $(LIBDEPS64)
### make
else
CCFLAGS      = $(CCFLAGS32)
SHRLIB       = $(SHRLIB32)
SHROBJ       = $(SHROBJ32)
LIBDEPS      = $(LIBDEPS32)
endif

### tells make all things to do (ordered)
all: removeo $(SHRLIB) removeo 

### generic rules
### (note: .c.o compiles all c parts in OBJS list)
.SUFFIXES: .o .c
.c.o:
	$(CC) $(CCFLAGS) $(INCLUDEPATH) -c $<

### -- Build the shared lib(s).
$(SHROBJ): $(LIBOBJS)
	$(CC) $(LIBOBJS) $(LIBEXPS) $(LIBDEPS) -o$(SHROBJ) 
$(SHRLIB): $(SHROBJ)
	$(AR) $(AROPT) ruv $(SHRLIB) $(SHROBJ)

clean:
	rm -f $(SHRLIB)
removeo:
	rm -f *.o

