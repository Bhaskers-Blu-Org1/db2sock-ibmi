     H NOMAIN          
     H AlwNull(*UsrCtl)          

       // ****************************************************          
       // prototypes char
       // ****************************************************
       dcl-pr rainchar1;
         a1 char(1) value;
         a2 char(1) value;
         a3 char(1) value;
         a4 char(1) value;
         o1 char(1);
         o2 char(1);
         o3 char(1);
         o4 char(1);
       end-pr;
       dcl-pr rainchar2;
         a1 char(2) value;
         a2 char(2) value;
         a3 char(2) value;
         a4 char(2) value;
         o1 char(2);
         o2 char(2);
         o3 char(2);
         o4 char(2);
       end-pr;
       dcl-pr rainchar3;
         a1 char(3) value;
         a2 char(3) value;
         a3 char(3) value;
         a4 char(3) value;
         o1 char(3);
         o2 char(3);
         o3 char(3);
         o4 char(3);
       end-pr;
       dcl-pr rainchar4;
         a1 char(4) value;
         a2 char(4) value;
         a3 char(4) value;
         a4 char(4) value;
         o1 char(4);
         o2 char(4);
         o3 char(4);
         o4 char(4);
       end-pr;
       dcl-pr rainchar5;
         a1 char(5) value;
         a2 char(5) value;
         a3 char(5) value;
         a4 char(5) value;
         o1 char(5);
         o2 char(5);
         o3 char(5);
         o4 char(5);
       end-pr;
       dcl-pr rainchar6;
         a1 char(6) value;
         a2 char(6) value;
         a3 char(6) value;
         a4 char(6) value;
         o1 char(6);
         o2 char(6);
         o3 char(6);
         o4 char(6);
       end-pr;
       dcl-pr rainchar7;
         a1 char(7) value;
         a2 char(7) value;
         a3 char(7) value;
         a4 char(7) value;
         o1 char(7);
         o2 char(7);
         o3 char(7);
         o4 char(7);
       end-pr;
       dcl-pr rainchar8;
         a1 char(8) value;
         a2 char(8) value;
         a3 char(8) value;
         a4 char(8) value;
         o1 char(8);
         o2 char(8);
         o3 char(8);
         o4 char(8);
       end-pr;
       // too big one register (pase)
       dcl-pr rainchar16;
         a1 char(16) value;
         a2 char(16) value;
         a3 char(16) value;
         a4 char(16) value;
         o1 char(16);
         o2 char(16);
         o3 char(16);
         o4 char(16);
       end-pr;

       // ****************************************************          
       // prototypes int
       // ****************************************************
       dcl-pr rainint1;
         a1 int(3) value;
         a2 int(3) value;
         a3 int(3) value;
         a4 int(3) value;
         o1 int(3);
         o2 int(3);
         o3 int(3);
         o4 int(3);
       end-pr;
       dcl-pr rainint2;
         a1 int(5) value;
         a2 int(5) value;
         a3 int(5) value;
         a4 int(5) value;
         o1 int(5);
         o2 int(5);
         o3 int(5);
         o4 int(5);
       end-pr;
       dcl-pr rainint4;
         a1 int(10) value;
         a2 int(10) value;
         a3 int(10) value;
         a4 int(10) value;
         o1 int(10);
         o2 int(10);
         o3 int(10);
         o4 int(10);
       end-pr;
       dcl-pr rainint8;
         a1 int(20) value;
         a2 int(20) value;
         a3 int(20) value;
         a4 int(20) value;
         o1 int(20);
         o2 int(20);
         o3 int(20);
         o4 int(20);
       end-pr;

       // ****************************************************          
       // prototypes float
       // ****************************************************
       dcl-pr rainfloat4;
         a1 float(4) value;
         a2 float(4) value;
         a3 float(4) value;
         a4 float(4) value;
         o1 float(4);
         o2 float(4);
         o3 float(4);
         o4 float(4);
       end-pr;
       dcl-pr rainfloat8;
         a1 float(8) value;
         a2 float(8) value;
         a3 float(8) value;
         a4 float(8) value;
         o1 float(8);
         o2 float(8);
         o3 float(8);
         o4 float(8);
       end-pr;

       // ****************************************************          
       // prototypes packed
       // ****************************************************
       dcl-pr rainpack4;
         a1 packed(4:2) value;
         a2 packed(4:2) value;
         a3 packed(4:2) value;
         a4 packed(4:2) value;
         o1 packed(4:2);
         o2 packed(4:2);
         o3 packed(4:2);
         o4 packed(4:2);
       end-pr;
       dcl-pr rainpack8;
         a1 packed(8:2) value;
         a2 packed(8:2) value;
         a3 packed(8:2) value;
         a4 packed(8:2) value;
         o1 packed(8:2);
         o2 packed(8:2);
         o3 packed(8:2);
         o4 packed(8:2);
       end-pr;
       dcl-pr rainpack11;
         a1 packed(11:4) value;
         a2 packed(11:4) value;
         a3 packed(11:4) value;
         a4 packed(11:4) value;
         o1 packed(11:4);
         o2 packed(11:4);
         o3 packed(11:4);
         o4 packed(11:4);
       end-pr;
       dcl-pr rainpack12;
         a1 packed(12:2) value;
         a2 packed(12:2) value;
         a3 packed(12:2) value;
         a4 packed(12:2) value;
         o1 packed(12:2);
         o2 packed(12:2);
         o3 packed(12:2);
         o4 packed(12:2);
       end-pr;
       dcl-pr rainpack14;
         a1 packed(14:2) value;
         a2 packed(14:2) value;
         a3 packed(14:2) value;
         a4 packed(14:2) value;
         o1 packed(14:2);
         o2 packed(14:2);
         o3 packed(14:2);
         o4 packed(14:2);
       end-pr;
       dcl-pr rainpack15;
         a1 packed(15:2) value;
         a2 packed(15:2) value;
         a3 packed(15:2) value;
         a4 packed(15:2) value;
         o1 packed(15:2);
         o2 packed(15:2);
         o3 packed(15:2);
         o4 packed(15:2);
       end-pr;
       // too big one register (pase)
       dcl-pr rainpack24;
         a1 packed(24:2) value;
         a2 packed(24:2) value;
         a3 packed(24:2) value;
         a4 packed(24:2) value;
         o1 packed(24:2);
         o2 packed(24:2);
         o3 packed(24:2);
         o4 packed(24:2);
       end-pr;
       dcl-pr rainpack31;
         a1 packed(31:2) value;
         a2 packed(31:2) value;
         a3 packed(31:2) value;
         a4 packed(31:2) value;
         o1 packed(31:2);
         o2 packed(31:2);
         o3 packed(31:2);
         o4 packed(31:2);
       end-pr;

       // ****************************************************          
       // prototypes zoned
       // ****************************************************
       dcl-pr rainzone4;
         a1 zoned(4:2) value;
         a2 zoned(4:2) value;
         a3 zoned(4:2) value;
         a4 zoned(4:2) value;
         o1 zoned(4:2);
         o2 zoned(4:2);
         o3 zoned(4:2);
         o4 zoned(4:2);
       end-pr;
       dcl-pr rainzone8;
         a1 zoned(8:2) value;
         a2 zoned(8:2) value;
         a3 zoned(8:2) value;
         a4 zoned(8:2) value;
         o1 zoned(8:2);
         o2 zoned(8:2);
         o3 zoned(8:2);
         o4 zoned(8:2);
       end-pr;
       // too big one register (pase)
       dcl-pr rainzone12;
         a1 zoned(12:2) value;
         a2 zoned(12:2) value;
         a3 zoned(12:2) value;
         a4 zoned(12:2) value;
         o1 zoned(12:2);
         o2 zoned(12:2);
         o3 zoned(12:2);
         o4 zoned(12:2);
       end-pr;
       dcl-pr rainzone16;
         a1 zoned(16:2) value;
         a2 zoned(16:2) value;
         a3 zoned(16:2) value;
         a4 zoned(16:2) value;
         o1 zoned(16:2);
         o2 zoned(16:2);
         o3 zoned(16:2);
         o4 zoned(16:2);
       end-pr;

       // ****************************************************          
       // rainchar
       // ****************************************************          
       dcl-proc rainchar1 export;
       dcl-pi  *N;
         a1 char(1) value;
         a2 char(1) value;
         a3 char(1) value;
         a4 char(1) value;
         o1 char(1);
         o2 char(1);
         o3 char(1);
         o4 char(1);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainchar2 export;
       dcl-pi  *N;
         a1 char(2) value;
         a2 char(2) value;
         a3 char(2) value;
         a4 char(2) value;
         o1 char(2);
         o2 char(2);
         o3 char(2);
         o4 char(2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainchar3 export;
       dcl-pi  *N;
         a1 char(3) value;
         a2 char(3) value;
         a3 char(3) value;
         a4 char(3) value;
         o1 char(3);
         o2 char(3);
         o3 char(3);
         o4 char(3);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainchar4 export;
       dcl-pi  *N;
         a1 char(4) value;
         a2 char(4) value;
         a3 char(4) value;
         a4 char(4) value;
         o1 char(4);
         o2 char(4);
         o3 char(4);
         o4 char(4);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainchar5 export;
       dcl-pi  *N;
         a1 char(5) value;
         a2 char(5) value;
         a3 char(5) value;
         a4 char(5) value;
         o1 char(5);
         o2 char(5);
         o3 char(5);
         o4 char(5);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainchar6 export;
       dcl-pi  *N;
         a1 char(6) value;
         a2 char(6) value;
         a3 char(6) value;
         a4 char(6) value;
         o1 char(6);
         o2 char(6);
         o3 char(6);
         o4 char(6);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainchar7 export;
       dcl-pi  *N;
         a1 char(7) value;
         a2 char(7) value;
         a3 char(7) value;
         a4 char(7) value;
         o1 char(7);
         o2 char(7);
         o3 char(7);
         o4 char(7);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainchar8 export;
       dcl-pi  *N;
         a1 char(8) value;
         a2 char(8) value;
         a3 char(8) value;
         a4 char(8) value;
         o1 char(8);
         o2 char(8);
         o3 char(8);
         o4 char(8);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       // too big one register (pase)
       dcl-proc rainchar16 export;
       dcl-pi  *N;
         a1 char(16) value;
         a2 char(16) value;
         a3 char(16) value;
         a4 char(16) value;
         o1 char(16);
         o2 char(16);
         o3 char(16);
         o4 char(16);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;


       // ****************************************************          
       // rainint
       // ****************************************************          
       dcl-proc rainint1 export;
       dcl-pi  *N;
         a1 int(3) value;
         a2 int(3) value;
         a3 int(3) value;
         a4 int(3) value;
         o1 int(3);
         o2 int(3);
         o3 int(3);
         o4 int(3);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainint2 export;
       dcl-pi  *N;
         a1 int(5) value;
         a2 int(5) value;
         a3 int(5) value;
         a4 int(5) value;
         o1 int(5);
         o2 int(5);
         o3 int(5);
         o4 int(5);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainint4 export;
       dcl-pi  *N;
         a1 int(10) value;
         a2 int(10) value;
         a3 int(10) value;
         a4 int(10) value;
         o1 int(10);
         o2 int(10);
         o3 int(10);
         o4 int(10);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainint8 export;
       dcl-pi  *N;
         a1 int(20) value;
         a2 int(20) value;
         a3 int(20) value;
         a4 int(20) value;
         o1 int(20);
         o2 int(20);
         o3 int(20);
         o4 int(20);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;


       // ****************************************************          
       // rainfloat
       // ****************************************************          
       dcl-proc rainfloat4 export;
       dcl-pi  *N;
         a1 float(4) value;
         a2 float(4) value;
         a3 float(4) value;
         a4 float(4) value;
         o1 float(4);
         o2 float(4);
         o3 float(4);
         o4 float(4);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainfloat8 export;
       dcl-pi  *N;
         a1 float(8) value;
         a2 float(8) value;
         a3 float(8) value;
         a4 float(8) value;
         o1 float(8);
         o2 float(8);
         o3 float(8);
         o4 float(8);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;


       // ****************************************************          
       // rainpacked
       // ****************************************************          
       dcl-proc rainpack4 export;
       dcl-pi  *N;
         a1 packed(4:2) value;
         a2 packed(4:2) value;
         a3 packed(4:2) value;
         a4 packed(4:2) value;
         o1 packed(4:2);
         o2 packed(4:2);
         o3 packed(4:2);
         o4 packed(4:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainpack8 export;
       dcl-pi  *N;
         a1 packed(8:2) value;
         a2 packed(8:2) value;
         a3 packed(8:2) value;
         a4 packed(8:2) value;
         o1 packed(8:2);
         o2 packed(8:2);
         o3 packed(8:2);
         o4 packed(8:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainpack11 export;
       dcl-pi  *N;
         a1 packed(11:4) value;
         a2 packed(11:4) value;
         a3 packed(11:4) value;
         a4 packed(11:4) value;
         o1 packed(11:4);
         o2 packed(11:4);
         o3 packed(11:4);
         o4 packed(11:4);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainpack12 export;
       dcl-pi  *N;
         a1 packed(12:2) value;
         a2 packed(12:2) value;
         a3 packed(12:2) value;
         a4 packed(12:2) value;
         o1 packed(12:2);
         o2 packed(12:2);
         o3 packed(12:2);
         o4 packed(12:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainpack14 export;
       dcl-pi  *N;
         a1 packed(14:2) value;
         a2 packed(14:2) value;
         a3 packed(14:2) value;
         a4 packed(14:2) value;
         o1 packed(14:2);
         o2 packed(14:2);
         o3 packed(14:2);
         o4 packed(14:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainpack15 export;
       dcl-pi  *N;
         a1 packed(15:2) value;
         a2 packed(15:2) value;
         a3 packed(15:2) value;
         a4 packed(15:2) value;
         o1 packed(15:2);
         o2 packed(15:2);
         o3 packed(15:2);
         o4 packed(15:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       // too big one register (pase)
       dcl-proc rainpack24 export;
       dcl-pi  *N;
         a1 packed(24:2) value;
         a2 packed(24:2) value;
         a3 packed(24:2) value;
         a4 packed(24:2) value;
         o1 packed(24:2);
         o2 packed(24:2);
         o3 packed(24:2);
         o4 packed(24:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainpack31 export;
       dcl-pi  *N;
         a1 packed(31:2) value;
         a2 packed(31:2) value;
         a3 packed(31:2) value;
         a4 packed(31:2) value;
         o1 packed(31:2);
         o2 packed(31:2);
         o3 packed(31:2);
         o4 packed(31:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;


       // ****************************************************          
       // rainzoned
       // ****************************************************          
       dcl-proc rainzone4 export;
       dcl-pi  *N;
         a1 zoned(4:2) value;
         a2 zoned(4:2) value;
         a3 zoned(4:2) value;
         a4 zoned(4:2) value;
         o1 zoned(4:2);
         o2 zoned(4:2);
         o3 zoned(4:2);
         o4 zoned(4:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainzone8 export;
       dcl-pi  *N;
         a1 zoned(8:2) value;
         a2 zoned(8:2) value;
         a3 zoned(8:2) value;
         a4 zoned(8:2) value;
         o1 zoned(8:2);
         o2 zoned(8:2);
         o3 zoned(8:2);
         o4 zoned(8:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       // too big one register (pase)
       dcl-proc rainzone12 export;
       dcl-pi  *N;
         a1 zoned(12:2) value;
         a2 zoned(12:2) value;
         a3 zoned(12:2) value;
         a4 zoned(12:2) value;
         o1 zoned(12:2);
         o2 zoned(12:2);
         o3 zoned(12:2);
         o4 zoned(12:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;
       dcl-proc rainzone16 export;
       dcl-pi  *N;
         a1 zoned(16:2) value;
         a2 zoned(16:2) value;
         a3 zoned(16:2) value;
         a4 zoned(16:2) value;
         o1 zoned(16:2);
         o2 zoned(16:2);
         o3 zoned(16:2);
         o4 zoned(16:2);
       end-pi;
         o1 = a1;
         o2 = a2;
         o3 = a3;
         o4 = a4;
       end-proc;



